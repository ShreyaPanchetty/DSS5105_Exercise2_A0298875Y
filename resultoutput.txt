Setup Descriptions

â€¢ app.py: This script implements a Flask API exposing two endpoints:
  - `/predict`: Returns predicted stakeholder engagement score based on inputs `W` and `X`.
  - `/ate`: Returns estimated Average Treatment Effect (ATE), p-value, and 95% CI using statsmodels OLS regression.

â€¢ Dockerfile: Sets up a containerized Python environment with Flask and necessary libraries. Ensures consistent reproducibility across machines.

â€¢ Containerization: Provides a portable and reproducible way to deploy the Flask API using Docker. Helpful for running in GitHub Codespaces and other cloud environments.

---

Q1.2 â€“ ATE Estimate and Significance

â€¢ Estimated Î± (intercept): 95.9662  
â€¢ Estimated Ï„ (treatment effect / ATE): âˆ’9.1057  
â€¢ Estimated Î² (effect of spending): 1.5149  
â€¢ P-value for Ï„: 0.000  
â€¢ 95% Confidence Interval for Ï„: [âˆ’13.438, âˆ’4.773]

Interpretation: Participating in the carbon offset program is associated with a **9.11-point decrease** in stakeholder engagement, on average, after controlling for sustainability spending. This is **statistically significant**.

---

 Q1.3 â€“ Assumptions for Causal Interpretation of Ï„Ì‚

1. Unconfoundedness: No unmeasured confounders affecting both treatment and outcome after controlling for spending.
2. Overlap: All corporations had a non-zero probability of receiving either treatment.
3. SUTVA: The outcome of each unit is independent of the treatment assigned to other units.

---

ðŸ”¢ Q2.3 â€“ Predicted Engagement Score Å¶i

Input:
â€¢ Wi = 1  
â€¢ Xi = 20  

Prediction via API:
```json
{
  "W": 1.0,
  "X": 20.0,
  "predicted_Yobs": 117.16
}
```

Manual Calculation:
Å¶i = 95.9662 + (âˆ’9.1057 Ã— 1) + (1.5149 Ã— 20) = **117.16**

---

ðŸ“Œ Reference Statsmodels Output

â€¢ RÂ² = 0.698  
â€¢ Adj. RÂ² = 0.662  
â€¢ F-statistic = 19.61  
â€¢ Prob (F-statistic) = 3.84e-05  
â€¢ AIC = 120.2  
â€¢ BIC = 123.1

---
